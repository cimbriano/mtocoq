Phase 1
1. Language Syntax - Figure 2
2. Auxiliary Syntax and Functions for Semantics - Figure 3
3. Auxiliary Syntax and Function for Typing - Figure 5

Phase 2
4. Trace equivalence Definition - Figure 10 (Tech Report)
5. Trace Pattern Equivalence - Figure 7
6. Low Equivalence for Memory - Definition 1
7. Gamma Validity - Definition 2
8. Typing Rules - Figure 6
9. Operational Semantics - Figure 4
10. Lemmas in tech report in order to prove theorem 1 on page 8:


ToDo
	- Write a boolean function version of tracePatternEquivalence
	- How to represent arrays
	- Write the auxiliary syntax in Figure 3 (get, update)


Current Open Questions 
* How to represent Memory which is defined to be
	Memory m element of Var -> (Array U Nat) x SecLabel

* How to represent memory as a Coq type?

* Trace for loop - is Fetch (p) to fetch the instruction for the guard? What i the guard is a complicated expression?

* Figure 5 - lattice order definition
	- if l1 and l2 are labels, why the requirement that l2 not be a number
	- As far as we understand and l (label) can't be a number at all. only L or and oram location